[{"D:\\Others\\Estorbos\\cards\\cah\\src\\index.js":"1","D:\\Others\\Estorbos\\cards\\cah\\src\\cardView.js":"2","D:\\Others\\Estorbos\\cards\\cah\\src\\App.js":"3","D:\\Others\\Estorbos\\cards\\cah\\src\\reportWebVitals.js":"4","D:\\Others\\Estorbos\\cards\\cah\\src\\card.js":"5","D:\\Others\\Estorbos\\cards\\cah\\src\\getCard.js":"6","D:\\Others\\Estorbos\\cards\\cah\\src\\card2.js":"7"},{"size":1492,"mtime":1611397531910,"results":"8","hashOfConfig":"9"},{"size":891,"mtime":1611396336299,"results":"10","hashOfConfig":"9"},{"size":461,"mtime":1610903809078,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1610702813464,"results":"12","hashOfConfig":"9"},{"size":1581,"mtime":1610913212871,"results":"13","hashOfConfig":"9"},{"size":730,"mtime":1610910004778,"results":"14","hashOfConfig":"9"},{"size":1560,"mtime":1611050340783,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fb8xrb",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},"D:\\Others\\Estorbos\\cards\\cah\\src\\index.js",[],"D:\\Others\\Estorbos\\cards\\cah\\src\\cardView.js",["34","35","36","37"],"D:\\Others\\Estorbos\\cards\\cah\\src\\App.js",[],["38","39"],"D:\\Others\\Estorbos\\cards\\cah\\src\\reportWebVitals.js",[],"D:\\Others\\Estorbos\\cards\\cah\\src\\card.js",["40","41","42","43"],"import React, { Component } from \"react\";\r\nimport icon from \"./img/cah-icon.png\";\r\nimport get from \"./getCard\";\r\nimport { STATUS_CODES } from \"http\";\r\nconst width = 250;\r\nconst height = width / 0.716;\r\nconst style = {\r\n  cards: {\r\n    width,\r\n    height\r\n  },\r\n  img: { width: 15, marginRight: 5 }\r\n};\r\nexport default class Card extends Component {\r\n  state = {\r\n    set: randIndex(70),\r\n    text: \"\",\r\n    setText: \"\"\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    get().then(async val => {\r\n      let deck;\r\n      let set = /*this.*/ state.set;\r\n      let size = -1;\r\n      if (/*this.*/ props.color === \"white\") {\r\n        deck = val[set].white;\r\n      } else {\r\n        deck = val[set].black;\r\n      }\r\n      let key = {};\r\n      for (key in deck) {\r\n        if (deck.hasOwnProperty(key)) size++;\r\n      }\r\n      let num = randIndex(size - 1);\r\n      ///*this.*/ setState({ text: deck[num].text });\r\n      ///*this.*/ setState({ setText: val[set].name });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let divClass = \"card \" + this.props.color + \"-card\";\r\n    let imgClass = \"\";\r\n\r\n    if (this.props.color === \"black\") {\r\n      imgClass += \"invert\";\r\n    }\r\n\r\n    return (\r\n      <div style={style.cards} className={divClass}>\r\n        <span className=\"card-header\">{this.state.text}</span>\r\n        <div className=\"card-bottom\">\r\n          <img className={imgClass} style={style.img} src={icon} />\r\n          <span>{this.state.setText}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst randIndex = num => {\r\n  return Math.floor(Math.random() * num + 1);\r\n};\r\n",["44","45"],"D:\\Others\\Estorbos\\cards\\cah\\src\\getCard.js",[],"D:\\Others\\Estorbos\\cards\\cah\\src\\card2.js",["46","47","48"],"import React, { Component } from \"react\";\r\nimport icon from \"./img/cah-icon.png\";\r\nimport get from \"./getCard\";\r\nimport { STATUS_CODES } from \"http\";\r\nconst width = 250;\r\nconst height = width / 0.716;\r\nconst style = {\r\n  cards: {\r\n    width,\r\n    height\r\n  },\r\n  img: { width: 15, marginRight: 5 }\r\n};\r\n\r\nexport default class Card extends Component {\r\n  state = {\r\n    set: randIndex(70),\r\n    text: \"\",\r\n    setText: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    get().then(async val => {\r\n      let deck;\r\n      let set = this.state.set;\r\n      let size = -1;\r\n      if (this.props.color === \"white\") {\r\n        deck = val[set].white;\r\n      } else {\r\n        deck = val[set].black;\r\n      }\r\n      let key = {};\r\n      for (key in deck) {\r\n        if (deck.hasOwnProperty(key)) size++;\r\n      }\r\n      console.log(val);\r\n      let num = randIndex(size - 1);\r\n\r\n      this.setState({ text: deck[num].text });\r\n      this.setState({ setText: val[set].name });\r\n    });\r\n  }\r\n  render() {\r\n    let divClass = \"card \" + this.props.color + \"-card\";\r\n    let imgClass = \"\";\r\n\r\n    if (this.props.color === \"black\") {\r\n      imgClass += \"invert\";\r\n    }\r\n\r\n    return (\r\n      <div style={style.cards} className={divClass}>\r\n        <span className=\"card-header\">{this.state.text}</span>\r\n        <div className=\"card-bottom\">\r\n          <img className={imgClass} style={style.img} src={icon} />\r\n          <span>{this.state.setText}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst randIndex = num => {\r\n  return Math.floor(Math.random() * num + 1);\r\n};\r\n",{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":23},{"ruleId":"49","severity":1,"message":"54","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":16},{"ruleId":"49","severity":1,"message":"55","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":11},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"49","severity":1,"message":"60","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":16,"column":10,"nodeType":"51","messageId":"63","endLine":16,"endColumn":19},{"ruleId":"49","severity":1,"message":"64","line":34,"column":11,"nodeType":"51","messageId":"52","endLine":34,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":52,"column":11,"nodeType":"67","endLine":52,"endColumn":68},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"49","severity":1,"message":"60","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":17,"column":10,"nodeType":"51","messageId":"63","endLine":17,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":55,"column":11,"nodeType":"67","endLine":55,"endColumn":68},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'reportWebVitals' is defined but never used.","'firebase' is defined but never used.","'get' is defined but never used.","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'STATUS_CODES' is defined but never used.","no-use-before-define","'randIndex' was used before it was defined.","usedBeforeDefined","'num' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["70"],["71"],"no-global-assign","no-unsafe-negation"]